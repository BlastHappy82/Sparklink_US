# Example workflow that builds the VitePress site and deploys it to GitHub Pages
name: Deploy VitePress site to Pages

on:
  # Run on pushes to the `main` branch
  # Change to `master` if your default branch is `master`
  push:
    branches: [main]

  # Allow this workflow to be run manually from the Actions tab
  workflow_dispatch:

# Set the permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Only allow one deployment to run at a time, skipping runs queued between the latest and running ones
# Do not cancel in-progress runs because we want production deployments to complete
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is disabled
      - uses: pnpm/action-setup@v3 # Use pnpm

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm # Cache using pnpm
          version: 9.14.4 # Specify a pnpm version if needed

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: pnpm install # Install dependencies with pnpm

      - name: Build with VitePress
        run: pnpm run docs:build # Build using pnpm
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
